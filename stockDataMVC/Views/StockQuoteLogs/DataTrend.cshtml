@model stockDataMVC.Controllers.StockQuoteLogsController.StDataModel  

<div class="row">
    <div class="col-sm-12">
        


<script>
    var pvObj
    @{
        //a couple of things are going on here. In Razor, I am building strings of coordinates for and SVG path.
        //in javascript, I am taking all of the values and pasing it to TrendMenuAS.js to create an object that holds all the data
        Dictionary<int, string> penSVGStrDict = new Dictionary<int, string>();
                //class penData

        int x = 0;
        int cLength = 500;
        int cHeight = 300;
        @:var pvObj;
        @:var pvAr = [];

        @:var tickerIndex =0;
        foreach (var item in Model.stockPenDataDict) {
            //item.Value.stockDataList
            @:pvAr = [];
            //get index to javascript ticker object
            @:tickerIndex = getTickerIndexFromID(@Html.DisplayFor(p => item.Key));
            
            float pMin = item.Value.minValue;
            float pMax = item.Value.maxValue;
            pMin = pMin - (float)(pMax * 0.01);
            pMax = pMax + (float)(pMax * 0.01);
            @:if (tickerIndex >= 0){
                @:tickerList[tickerIndex].setTickerMinMax(@Html.DisplayFor(p => pMin),@Html.DisplayFor(p => pMax));
            @:}
            for (int i = 0; i < item.Value.stockDataList.Count; i++)
            {
                float yPos = cHeight - (item.Value.stockDataList[i].price - pMin) / (pMax - pMin) * cHeight;
                float xPos = i * cLength / Model.slices + 40; //40 is the offset in pixels from beginning of y axis
                if (penSVGStrDict.ContainsKey(item.Key))
                {
                    penSVGStrDict[item.Key] += " L" + xPos.ToString() + " " + yPos;
                }
                else// key not found start new entry
                {
                    string str = "M";
                    str += xPos.ToString() + " " + yPos;
                    penSVGStrDict.Add(item.Key, str);
                }
                @:pvObj = new PenValueObj(@Html.DisplayFor(p => item.Value.stockDataList[i].price),@Html.DisplayFor(v => item.Value.stockDataList[i].volume), '@Html.DisplayFor(t => item.Value.stockDataList[i].timestamp)', '@Html.DisplayFor(n => item.Value.tickerName)');
                @:if (tickerIndex >= 0){
                    @:tickerList[tickerIndex].pushLoggedData(pvObj);
                @:}
            }

        }

    }
</script>
        <div ng-controller="testController">
            {{timeSlices=@Html.DisplayFor(sl => Model.slices);}}
            <svg height="@Html.DisplayFor(len => cHeight)" width="@Html.DisplayFor(len => cLength)" ng-mousemove="onMouseMove($event)" ng->
                <path d="M40 0 L40 @Html.DisplayFor(len => cHeight) L @Html.DisplayFor(len => cLength) @Html.DisplayFor(len => cHeight)" style="stroke:black; fill:none; stroke-width:2" />
                @{
                    List<string> penColors = new List<string> { "blue", "red", "green", "yellow", "grey", "lightblue" };
                    x = 0;
                }
                @foreach (var item in penSVGStrDict)
                {
                    string maxDisp = (Model.stockPenDataDict[item.Key].maxValue + Model.stockPenDataDict[item.Key].maxValue * (float)0.01).ToString("0.0");
                    string minDisp = (Model.stockPenDataDict[item.Key].minValue - Model.stockPenDataDict[item.Key].maxValue * (float)0.01).ToString("0.0");
                    @:<text x="0" y="15" fill="black">@Html.DisplayFor(modelItem => maxDisp)</text>
                    @:<text x="0" y="@Html.DisplayFor(len => cHeight)" fill="black">@Html.DisplayFor(modelItem => minDisp)</text>
                    @:<path  d="@Html.DisplayFor(modelItem => item.Value)" style="stroke:@Html.DisplayFor(colorItem => penColors[x]); fill:none; stroke-width:2" />
                    @:<circle ng-attr-cx="{{coords.x-2}}" ng-attr-cy="{{coords.y}}" r="3" stroke="black" stroke-width="1" fill="@Html.DisplayFor(colorItem => penColors[x])" />
                    x++;
                }
                
                <line ng-attr-x1="{{coords.x-1.5}}" y1="0" ng-attr-x2="{{coords.x}}" y2="@Html.DisplayFor(len => cHeight)" style="stroke:rgb(0,0,0);stroke-width:1" stroke-dasharray="5,5" />
                
                      Sorry, your browser does not support inline SVG.
            </svg>

            <br />

            <strong>MOUSE MOVE RESULT:</strong> {{onMouseMoveResult}}<br />
            {{'yet' + '!'}}
        </div>
            @foreach (var item in penSVGStrDict)
            {

                //@Html.DisplayFor(modelItem => item.Value)@:" style="stroke:black; fill:none; stroke-width:2" />
            }
<table id="searchTextResults">
    <tr>
        <th>time</th>
        
        @foreach (var item in Model.stockPenDataDict)
        {
            
            @:<th>@Html.DisplayFor(modelItem => item.Value.tickerName)</th>
                    
            @:</tr>
            for (int i = 0; i < item.Value.stockDataList.Count; i++)
                {
                @:<tr>
                    @:<td>@Html.DisplayFor(modelItem => i)</td>
                    @:<td>@Html.DisplayFor(modelItem => item.Value.stockDataList[i].timestamp)</td>
                    @:<td>@Html.DisplayFor(modelItem => item.Value.stockDataList[i].price)</td>
  

                @:</tr>
                }
        }
        </table>



        </div>
    </div>

 

        