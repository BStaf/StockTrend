@model stockDataMVC.Controllers.StockQuoteLogsController.StDataModel  
<!--<script src="~/Scripts/TrendMenuAJS.js"></script>-->
<div class="row">
    <div class="col-sm-12">
        


<script>
    var pvObj
    @{
        //a couple of things are going on here. In Razor, I am building strings of coordinates for and SVG path.
        //in javascript, I am taking all of the values and pasing it to TrendMenuAS.js to create an object that holds all the data
                Dictionary<int, string> penSVGStrDict = new Dictionary<int, string>();
                //class penData

                int x = 0;
                int cLength = 500;
                int cHeight = 300;
                @:var pvObj;
                    @:var pvAr = [];

                    //each item in this dictionary contains an StData Object
                foreach (var item in Model.stockDataDict)
                //for (int x = 0; x < Model.stockDataDict.Count; x++)
                {
                    @:pvAr = [];
                            //var item = Model.stockDataDict.Values[x];
                    for (int i = 0; i < item.Value.Count; i++)
                    {

                        float pMin = Model.stockPenDataDict[item.Value[i].tickerID].minValue;
                        float pMax = Model.stockPenDataDict[item.Value[i].tickerID].maxValue;
                        pMin = pMin - (float)(pMax * 0.01);
                        pMax = pMax + (float)(pMax * 0.01);
                        float yPos = cHeight - (item.Value[i].price - pMin) / (pMax - pMin) * cHeight;
                        if (penSVGStrDict.ContainsKey(item.Value[i].tickerID))
                        {
                            int xPos = x * cLength / Model.stockDataDict.Count + 40;
                            penSVGStrDict[item.Value[i].tickerID] += " L" + xPos.ToString() + " " + yPos;
                        }
                        else// key not found start new entry
                        {
                            string str = "M";

                            str += (x * cLength / Model.stockDataDict.Count + 40).ToString() + " " + yPos;
                            penSVGStrDict.Add(item.Value[i].tickerID, str);
                        }

                        @:pvObj = new PenValue(@Html.DisplayFor(p => item.Value[i].price),@Html.DisplayFor(v => item.Value[i].volume), '@Html.DisplayFor(t => item.Key)', '@Html.DisplayFor(n => Model.stockPenDataDict[item.Value[i].tickerID].tickerName)');
                        @:pvAr.push(pvObj);


                    }
                    x++;
                    @:populateStockPrices(pvAr);

                    }
    }
</script>
        <div ng-controller="testController">
            {{timeSlices=@Html.DisplayFor(sl => Model.slices);}}
            <svg height="@Html.DisplayFor(len => cHeight)" width="@Html.DisplayFor(len => cLength)" ng-mousemove="onMouseMove($event)" ng->
                <path d="M40 0 L40 @Html.DisplayFor(len => cHeight) L @Html.DisplayFor(len => cLength) @Html.DisplayFor(len => cHeight)" style="stroke:black; fill:none; stroke-width:2" />
                @{
                    List<string> penColors = new List<string> { "blue", "red", "green", "yellow", "grey", "lightblue" };
                    x = 0;
                }
                @foreach (var item in penSVGStrDict)
                {
                    string maxDisp = (Model.stockPenDataDict[item.Key].maxValue + Model.stockPenDataDict[item.Key].maxValue * (float)0.01).ToString("0.0");
                    string minDisp = (Model.stockPenDataDict[item.Key].minValue - Model.stockPenDataDict[item.Key].maxValue * (float)0.01).ToString("0.0");
                    @:<text x="0" y="15" fill="black">@Html.DisplayFor(modelItem => maxDisp)</text>
                    @:<text x="0" y="@Html.DisplayFor(len => cHeight)" fill="black">@Html.DisplayFor(modelItem => minDisp)</text>
                    @:<path  d="@Html.DisplayFor(modelItem => item.Value)" style="stroke:@Html.DisplayFor(colorItem => penColors[x]); fill:none; stroke-width:2" />
                    @:<circle ng-attr-cx="{{coords.x}}" ng-attr-cy="{{coords.y}}" r="3" stroke="black" stroke-width="1" fill="@Html.DisplayFor(colorItem => penColors[x])" />
                    x++;
                }
                
                <line ng-attr-x1="{{coords.x}}" y1="0" ng-attr-x2="{{coords.x}}" y2="@Html.DisplayFor(len => cHeight)" style="stroke:rgb(0,0,0);stroke-width:1" stroke-dasharray="5,5" />
                
                      Sorry, your browser does not support inline SVG.
            </svg>

            <br />

            <strong>MOUSE MOVE RESULT:</strong> {{onMouseMoveResult}}<br />
            {{'yet' + '!'}}
        </div>
            @foreach (var item in penSVGStrDict)
            {

                //@Html.DisplayFor(modelItem => item.Value)@:" style="stroke:black; fill:none; stroke-width:2" />
            }



            <table id="searchTextResults">
                <tr>
                    <th>time</th>
                    @foreach (var item in Model.stockPenDataDict)
                    {
                        <th>@Html.DisplayFor(modelItem => item.Value.tickerName)</th>
                    }
                </tr>
                @foreach (var item in Model.stockDataDict)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Key)</td>
                        @for (int i = 0; i < item.Value.Count; i++)
                        {

                            <td>@Html.DisplayFor(modelItem => item.Value[i].price)</td>
                        }

                    </tr>
                }
            </table>
        </div>
    </div>

 

        