@model stockDataMVC.Controllers.StockQuoteLogsController.TrendDataObj

<div class="row">
    <div class="col-sm-12">


<script>
    var pvObj
    @{
        //a couple of things are going on here. In Razor, I am building strings of coordinates for and SVG path.
        //in javascript, I am taking all of the values and pasing it to TrendMenuAS.js to create an object that holds all the data
        Dictionary<string, string> penSVGStrDict = new Dictionary<string, string>();
                //class penData

        int x = 0;
        int cLength = 500;
        int cHeight = 250;
        bool muliplePens = false;
        float xPos, yPos;
        float pMin = 0;
        float pMax = 0;
        float minPercentOffset = 0;
        bool firstPass = false;
        @:var pvObj;
        @:var pvAr = [];
        @:tickerList = [];
        @:var tickerIndex = 0;

        if (Model.loggedDataList.Count > Model.maxRecordsPerItem){
            muliplePens = true;
        }
        string tickerName = "";
        


        //create min max y Axis values for  trend
        float range = 0;
        if (!muliplePens){
            range = Model.maxValPrice - Model.minValPrice;
            pMin = Model.minValPrice - (float)(range * 0.15);
            pMax = Model.maxValPrice + (float)(range * 0.15);
        }
        else
        {
            range = Model.maxValPercent - Model.minValPercent;
            pMin = Model.minValPercent - (float)(range * 0.15);
            pMax = Model.maxValPercent + (float)(range * 0.15);
            if (pMin < 0)
            {
                minPercentOffset = pMin * -1;
            }
        }
        range = pMax - pMin;
        float chartPoint = 0;
        x = 0;
        for (int i=0; i< Model.loggedDataList.Count;i++)
        {
            var item = Model.loggedDataList[i];
            if (tickerName != item.name) {
                @:if (tickerIndex > 0){
                    @:tObj = new TickerObj(0, '@Html.DisplayFor(n => tickerName)',@Html.DisplayFor(p => pMax),@Html.DisplayFor(p => pMin),pvAr);
                    @:tickerList.push(tObj);                  
                @:}
                @:pvAr = []; //penData Array used in tickerObject
                @://tickerList[tickerIndex].clearLoggedData();
                @:tickerIndex++;
                tickerName = item.name;
                firstPass = true;
                x = 0;
            }
            if (!muliplePens){
                chartPoint = item.price;
            }
            else {
                chartPoint = item.percent + minPercentOffset;
            }
            float tmp3 = (chartPoint - (pMin + minPercentOffset));
            yPos = cHeight - tmp3 / (range) * cHeight;
            xPos = x * cLength / Model.maxRecordsPerItem + 40; //40 is the offset in pixels from beginning of y axis
            if (firstPass) {
                penSVGStrDict.Add(tickerName, ("M" + xPos.ToString() + " " + yPos));//begin a new path string for this ticker
            }
            else
            {
                penSVGStrDict[tickerName] += " L" + xPos.ToString() + " " + yPos;
            }
            @:pvObj = new PenValueObj(@Html.DisplayFor(p => item.price),@Html.DisplayFor(pc => item.percent),@Html.DisplayFor(v => item.volume), '@Html.DisplayFor(t => item.timeStamp)', '@Html.DisplayFor(n => item.name)');
            @:pvAr.push(pvObj);
            firstPass = false;
            x++;
        }
        @:tObj = new TickerObj(0, '@Html.DisplayFor(n => tickerName)',@Html.DisplayFor(p => pMax),@Html.DisplayFor(p => pMin),pvAr);
        @:tickerList.push(tObj);
        tickerName = "";
    }
        </script>

        <div ng-controller="testController" ng-init="init(500,250,40,@Html.DisplayFor(sl => Model.maxRecordsPerItem),@Html.DisplayFor(m => pMax),@Html.DisplayFor(len => pMin))">

            <svg height="@Html.DisplayFor(len => cHeight)" width="@Html.DisplayFor(len => cLength)" ng-mousemove="onMouseMove($event)" ng->
                <rect x="40" ng-attr-y="{{zeroYPos}}" width="@Html.DisplayFor(len => cLength)" height="500" style="fill:rgba(185,191,206,0.5);stroke-width:0;stroke:rgb(0,0,0);" />
                <path d="M40 0 L40 @Html.DisplayFor(len => cHeight) L @Html.DisplayFor(len => cLength) @Html.DisplayFor(len => cHeight)" style="stroke:black; fill:none; stroke-width:2" />

                @{
                    List<string> penColors = new List<string> { "#4251A3", "#CA407C", "#68912E", "#AB7F10", "#2AB78D" };
                    x = 0;
                }

                @foreach (var item in penSVGStrDict)
                {
                    //string maxDisp = (Model.stockPenDataDict[item.Key].maxValue + Model.stockPenDataDict[item.Key].maxValue * (float)0.01).ToString("0.0");
                    // string minDisp = (Model.stockPenDataDict[item.Key].minValue - Model.stockPenDataDict[item.Key].maxValue * (float)0.01).ToString("0.0");

                    @:
                    <path d="@Html.DisplayFor(modelItem => item.Value)" style="stroke:@Html.DisplayFor(colorItem => penColors[x]); fill:none; stroke-width:2" />
                    @:
                    <circle ng-attr-cx="{{rulerData.x-2}}" ng-attr-cy="{{rulerData.penCoords[@Html.DisplayFor(colorItem => x)].y}}" r="3" stroke="black" stroke-width="1" fill="@Html.DisplayFor(colorItem => penColors[x])" />
                    x++;
                }
                @{
                    string maxDisp = pMax.ToString("0.0");
                    string minDisp = pMin.ToString("0.0");
                    if (muliplePens)
                    {
                        maxDisp += "%";
                        minDisp += "%";
                    }
                }
                <text x="0" y="15" fill="black" font-size="12">@Html.DisplayFor(modelItem => maxDisp)</text>
                <text x="0" y="@Html.DisplayFor(len => cHeight)" fill="black" font-size="12">@Html.DisplayFor(modelItem => minDisp)</text>
                <line ng-attr-x1="{{rulerData.x-1.5}}" y1="0" ng-attr-x2="{{rulerData.x-1.5}}" y2="@Html.DisplayFor(len => cHeight)" style="stroke:rgb(0,0,0);stroke-width:1" stroke-dasharray="5,5" />

                Sorry, your browser does not support inline SVG.
            </svg>
            <br />
            <table class="table table-striped table-condensed table-hover">
                <thead>
                    <tr><th>Ticker</th><th>TimeStamp</th><th>Price</th></tr>
                </thead>
                <tbody>
                    <tr ng-repeat="item in rulerData.penCoords">
                        <td>{{item.name}}</td>
                        <td>{{item.timeStamp}}</td>
                        <td>{{item.price| currency}}</td>
                    </tr>
                </tbody>
            </table>

        </div>




    </div>
</div>